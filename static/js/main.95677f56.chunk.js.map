{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","count","current","status","winner","calculateWinner","moves","map","step","move","desc","jumpTo","handleClick","slice","length","setState","concat","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"kOAIA,SAASA,EAAOC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,Q,IAKPC,E,kKACJ,SAAaC,GAAI,IAAD,OACd,OAAO,cAACN,EAAD,CAAQI,MAAOG,KAAKN,MAAMO,QAAQF,GAAIH,QAC3C,kBAAM,EAAKF,MAAME,QAAQG,Q,oBAG7B,WACE,OACE,gCACE,sBAAKJ,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GAtBTC,IAAMC,WA6BpBC,E,kDACJ,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CACXC,QAAS,CAAC,CACRN,QAAS,IAAIO,MAAM,GAAGC,KAAK,QAE7BC,SAAS,EACTC,MAAO,GAPQ,E,0CAUnB,WAAU,IAAD,OACDJ,EAAUP,KAAKM,MAAMC,QACrBK,EAAUL,EAAQP,KAAKM,MAAMK,OAC/BE,EAAM,uBAAmBb,KAAKM,MAAMI,QAAQ,IAAM,KAClDI,EAASC,EAAgBH,EAAQX,SACjCa,IACFD,EAAS,WAAaC,GAEC,IAArBd,KAAKM,MAAMK,OAAgBG,IAC7BD,EAAS,QAEX,IAAMG,EAAQT,EAAQU,KAAI,SAACC,EAAMC,GAC/B,IAAMC,EAAOD,EAAO,aAAeA,EAAO,mBAC1C,OACE,6BACE,wBAAQvB,QAAS,kBAAI,EAAKyB,OAAOF,IAAjC,SAAyCC,KADlCD,MAMb,OACE,sBAAKxB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACEG,QAASW,EAAQX,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAKuB,YAAYvB,QAGrC,sBAAKJ,UAAU,YAAf,UACE,8BAAMkB,IACN,6BAAKG,Y,yBAKb,SAAYjB,GACV,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQgB,MAAM,EAAGvB,KAAKM,MAAMK,MAAQ,GAEzDV,EADUM,EAAQA,EAAQiB,OAAS,GACjBvB,QAAQsB,QAC5BR,EAAgBd,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKM,MAAMI,QAAS,IAAM,IACvCV,KAAKyB,SAAS,CACZlB,QAASA,EAAQmB,OAAO,CAAC,CACvBzB,QAASA,KAEXS,SAAUV,KAAKM,MAAMI,QACrBC,MAAOJ,EAAQiB,Y,oBAGnB,SAAON,GACLlB,KAAKyB,SAAS,CACZd,MAAOO,EACPR,QAAUQ,EAAO,IAAO,Q,GAjEXf,IAAMC,WA6EzB,SAASW,EAAgBd,GAWvB,IAVA,IAAM0B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA5B,EAAI,EAAGA,EAAI4B,EAAMH,OAAQzB,IAAK,CACrC,kBAAkB4B,EAAM5B,GAAxB,GAAO6B,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAI7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,GACpE,OAAO7B,EAAQ2B,GAGnB,OAAO,KAtBTG,IAASC,OACP,cAAC3B,EAAD,IACA4B,SAASC,eAAe,W","file":"static/js/main.95677f56.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return <Square value={this.props.squares[i]} onClick={\n      () => this.props.onClick(i)\n    } />;\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: new Array(9).fill(null),\n      }],\n      xIsNext: true,\n      count: 0,\n    }\n  }\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.count];\n    let status = `Next player: ${this.state.xIsNext?\"x\" : \"o\"}`;\n    let winner = calculateWinner(current.squares);\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } \n    if (this.state.count === 9 && !winner) {\n      status = \"Draw\";\n    }\n    const moves = history.map((step, move) => {\n      const desc = move ? \"Go to move\" + move : \"Go to game start\";\n      return (\n        <li key={move}>\n          <button onClick={()=>this.jumpTo(move)}>{desc}</button>\n        </li>\n      )\n    })\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.count + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext? \"x\" : \"o\";\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n      }]),\n      xIsNext: !this.state.xIsNext,\n      count: history.length,\n    });\n  }\n  jumpTo(step) {\n    this.setState({\n      count: step,\n      xIsNext: (step % 2) === 0,\n    })\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}"],"sourceRoot":""}